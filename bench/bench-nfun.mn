Nat : Unit = (N : Unit) -> (N -> N) -> N -> N
zero : Nat = λ N s z. z
succ : Nat → Nat = λ a N s z. s (a N s z)
five : Nat = \N s z. s (s (s (s (s z))))
add  : Nat -> Nat -> Nat = \a b N s z. a N s (b N s z)
mul  : Nat -> Nat -> Nat = \a b N s z. a N (b N s) z
ten      : Nat = add five five
hundred  : Nat = mul ten ten
thousand : Nat = mul ten hundred

nfun : Nat → Unit = λ n. n Unit (λ A. Unit → A) Unit
nten : nfun hundred -> nfun hundred = \x.x
{-# NORMAL_TYPE nten #-}
