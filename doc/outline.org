#+OPTIONS: toc:nil
#+LATEX_HEADER: \usepackage[margin=.5in]{geometry}

* Tasks
- Unit tests for the parser
  - https://www.jetbrains.com/help/idea/tdd-with-kotlin.html
  - https://github.com/renatahodovan/grammarinator
  - https://github.com/ilya-klyuchnikov/lambdapi/blob/master/prelude.lp
- Parse tree inspector for ANTLR?
- Get IGV working
- Get Chrome debugger working
- Debugging Graal in Idea?

* Questions
What's so special about HOAS?
What did techniques other Truffle functional languages use? Pony, ...
Should we include type-checking in runtime? == **partial evaluation** w/o checking
Can I do polyglot? Can I do basic I/O to eliminate warm-up? Benchmarking primitives?

* Dependent types, Lambda cube
https://en.wikipedia.org/wiki/Dependent_type
https://en.wikipedia.org/wiki/Higher-order_abstract_syntax
https://en.wikipedia.org/wiki/Combinatory_logic

* Implementations
https://github.com/AndrasKovacs/smalltt
https://github.com/u2zv1wx/neut
https://github.com/Beluga-lang/Beluga

Agda impl problems: https://github.com/agda/agda/issues/514

* Benchmarks:
Search: agda idris compilation "benchmark"
Search: dependent elaboration 

https://github.com/AndrasKovacs/smalltt
https://www.reddit.com/r/haskell/comments/3zc81v/tradeoffs_of_dependent_types_xpost_from_ridris/
https://github.com/xgrommx/idris-ecosystem
https://eb.host.cs.st-andrews.ac.uk/drafts/dtp-erasure-draft.pdf
https://www.researchgate.net/publication/221278462_Beluga_Programming_with_Dependent_Types_Contextual_Data_and_Contexts

